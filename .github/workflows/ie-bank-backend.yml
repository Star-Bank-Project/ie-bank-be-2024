name: ie-bank-backend

on:
  push: # Trigger on any branch push
  pull_request: # Trigger for pull requests on any branch
    types: ["opened", "synchronize", "reopened", "closed", "edited"]
  workflow_dispatch: # Manual trigger

permissions:
  contents: read
  id-token: write

env:
  # Backend apps
  BACKEND_WEBAPP_DEV: makenna-be-dev
  BACKEND_WEBAPP_UAT: makenna-be-uat
  # Container registry details
  DOCKER_REGISTRY_SERVER_URL_DEV: makennaacrdev.azurecr.io
  DOCKER_REGISTRY_SERVER_URL_UAT: makennaacruat.azurecr.io
  IMAGE_NAME_DEV: iebank-be:dev
  IMAGE_NAME_UAT: iebank-be:uat

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-version: ${{ steps.image-version.outputs.version }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8 pytest
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: python -m pytest --cov=iebank_api -v

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Docker Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ env.DOCKER_REGISTRY_SERVER_URL_DEV }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Set image version
        id: image-version
        run: echo "version=$(date +'%Y.%m.%d.%H.%M')" >> $GITHUB_OUTPUT

      - name: Build and push image
        run: |
          docker build . -t ${{ env.DOCKER_REGISTRY_SERVER_URL_DEV }}/${{ env.IMAGE_NAME_DEV }}:${{ steps.image-version.outputs.version }}
          docker build . -t ${{ env.DOCKER_REGISTRY_SERVER_URL_DEV }}/${{ env.IMAGE_NAME_DEV }}:latest
          docker push ${{ env.DOCKER_REGISTRY_SERVER_URL_DEV }}/${{ env.IMAGE_NAME_DEV }}:${{ steps.image-version.outputs.version }}
          docker push ${{ env.DOCKER_REGISTRY_SERVER_URL_DEV }}/${{ env.IMAGE_NAME_DEV }}:latest

  deploy-dev:
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'

    steps:
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App - Dev
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.BACKEND_WEBAPP_DEV }}
          images: ${{ env.DOCKER_REGISTRY_SERVER_URL_DEV }}/${{ env.IMAGE_NAME_DEV }}:${{ needs.build.outputs.image-version }}

  deploy-uat:
    if: github.event_name == 'push' || github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'UAT'

    steps:
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Docker Registry (UAT)
        uses: azure/docker-login@v2
        with:
          login-server: ${{ env.DOCKER_REGISTRY_SERVER_URL_UAT }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Deploy to Azure Web App - UAT
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.BACKEND_WEBAPP_UAT }}
          images: ${{ env.DOCKER_REGISTRY_SERVER_URL_UAT }}/${{ env.IMAGE_NAME_UAT }}:${{ needs.build.outputs.image-version }}
