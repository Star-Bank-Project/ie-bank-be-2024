name: ie-bank-backend

on:
  push:
    branches:
      - '**'  # Trigger on all branches
  pull_request:
    branches: ['*']  # Trigger on pull requests for all branches
    types: ['opened', 'synchronize', 'reopened', 'closed', 'edited']
  workflow_dispatch: # Manual trigger

permissions:
  contents: read
  id-token: write

env:
  ENV: ghci  # For testing database
  SQLALCHEMY_DATABASE_URI: sqlite:///test.db  # SQLite for testing

  # Dynamic Docker Registry Variables
  DOCKER_REGISTRY_NAME: makennaacrdev # Replace with your actual registry name
  ACR_USERNAME_SECRET_NAME: acrAdminUsername
  ACR_PASSWORD_SECRET_NAME: acrAdminPassword0

  # Dev environment
  KEY_VAULT_NAME_DEV: makenna-keyvault-dev
  BACKEND_WEBAPP_DEV: makenna-be-dev
  IMAGE_NAME_DEV: makennaacrdev.azurecr.io/iebank-be

  # UAT environment
  KEY_VAULT_NAME_UAT: makenna-keyvault-uat
  BACKEND_WEBAPP_UAT: makenna-be-uat
  IMAGE_NAME_UAT: makennaacruat.azurecr.io/iebank-be

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: python -m pytest --cov=iebank_api -v

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov

  build-dev:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      image-version: ${{ steps.image-version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get Docker registry credentials from Azure Key Vault (Dev)
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "REGISTRY_USERNAME=$(az keyvault secret show --name ${{ env.ACR_USERNAME_SECRET_NAME }} --vault-name ${{ env.KEY_VAULT_NAME_DEV }} --query value -o tsv)" >> $GITHUB_ENV
            echo "REGISTRY_PASSWORD=$(az keyvault secret show --name ${{ env.ACR_PASSWORD_SECRET_NAME }} --vault-name ${{ env.KEY_VAULT_NAME_DEV }} --query value -o tsv)" >> $GITHUB_ENV

      - name: Login to Docker Registry (Dev)
        uses: azure/docker-login@v2
        with:
          login-server: https://${{ env.DOCKER_REGISTRY_NAME }}.azurecr.io
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Set image version
        id: image-version
        run: echo "version=$(date +'%Y.%m.%d.%H.%M')" >> $GITHUB_OUTPUT

      - name: Build and push image (Dev)
        run: |
          IMAGE_TAG=${{ steps.image-version.outputs.version }}
          docker build . -t ${{ env.IMAGE_NAME_DEV }}:${IMAGE_TAG}
          docker build . -t ${{ env.IMAGE_NAME_DEV }}:latest
          docker push ${{ env.IMAGE_NAME_DEV }}:${IMAGE_TAG}
          docker push ${{ env.IMAGE_NAME_DEV }}:latest

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build-dev
    environment:
      name: 'Development'

    steps:
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App - Dev
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.BACKEND_WEBAPP_DEV }}
          images: ${{ env.IMAGE_NAME_DEV }}:${{ needs.build-dev.outputs.image-version }}

  build-uat:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      image-version: ${{ steps.image-version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get Docker registry credentials from Azure Key Vault (UAT)
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "REGISTRY_USERNAME=$(az keyvault secret show --name ${{ env.ACR_USERNAME_SECRET_NAME }} --vault-name ${{ env.KEY_VAULT_NAME_UAT }} --query value -o tsv)" >> $GITHUB_ENV
            echo "REGISTRY_PASSWORD=$(az keyvault secret show --name ${{ env.ACR_PASSWORD_SECRET_NAME }} --vault-name ${{ env.KEY_VAULT_NAME_UAT }} --query value -o tsv)" >> $GITHUB_ENV

      - name: Login to Docker Registry (UAT)
        uses: azure/docker-login@v2
        with:
          login-server: https://${{ env.DOCKER_REGISTRY_NAME }}.azurecr.io
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Set image version
        id: image-version
        run: echo "version=$(date +'%Y.%m.%d.%H.%M')" >> $GITHUB_OUTPUT

      - name: Build and push image (UAT)
        run: |
          IMAGE_TAG=${{ steps.image-version.outputs.version }}
          docker build . -t ${{ env.IMAGE_NAME_UAT }}:${IMAGE_TAG}
          docker build . -t ${{ env.IMAGE_NAME_UAT }}:latest
          docker push ${{ env.IMAGE_NAME_UAT }}:${IMAGE_TAG}
          docker push ${{ env.IMAGE_NAME_UAT }}:latest

  deploy-uat:
    runs-on: ubuntu-latest
    needs: build-uat
    environment:
      name: 'UAT'

    steps:
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App - UAT
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.BACKEND_WEBAPP_UAT }}
          images: ${{ env.IMAGE_NAME_UAT }}:${{ needs.build-uat.outputs.image-version }}
